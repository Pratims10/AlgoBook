{"version":3,"sources":["components/linear.js","components/linear_parent.js","components/binary.js","components/Binary_parent.js","components/BubbleSort.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Linear","ui","this","props","ar","map","x","index","srch","key","className","onLoad","check","Component","arr","n","length","Binary","mid","Math","floor","l","r","bubblectr","sorted","width","reset","color1","timeouts","skip","BubbleSort","state","delay","resetArray","bind","document","getElementById","disabled","console","log","i","getElementsByClassName","style","backgroundColor","sort","a","b","setState","min","max","array","push","random","arr_bar","transform","wdth","window","innerWidth","n1","value","val","clearTimeout","buttons","animations","j","color","swap","t","resetCSS","BubbleSortAnimations","ptr","ctr","len","idx1","idx2","qq","setTimeout","y","tm","minpos","temp","selectionSortAnimations","previdx","insertionSortAnimations","str","maxn","ctr1","height","transition","type","defaultValue","onChange","changeArrSize","id","onClick","bubbleSort","selectionSort","insertionSort","skipAnimations","changeDelay","Search","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57e04fec.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './myStyle.css';\r\n//import {Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle} from 'reactstrap';\r\n\r\nclass Linear extends Component {\r\n    render(){\r\n        const ui=this.props.ar.map((x,index)=>\r\n        {\r\n            if(this.props.index===index)\r\n            {\r\n                if(this.props.ar[this.props.index]!==this.props.srch)\r\n                return(<div key={index} className=\"def red col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                {\r\n                    return(<div key={index} className=\"def green col-2 col-sm-2 col-md-1\" onLoad={this.props.check()}>{x}</div>);\r\n                }\r\n            }\r\n            else\r\n            return(<div key={index} className=\"def q col-2 col-sm-2 col-md-1\">{x}</div>);\r\n        });\r\n        return (\r\n            <center>\r\n            <div className=\"mystl container\">\r\n                <div className=\"row\">\r\n                    {ui}\r\n                </div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Linear","import React, { Component } from 'react'\r\nimport Linear from './linear';\r\nimport './myStyle.css';\r\n\r\n    const arr=['3','5','4','1','6','7','54','6','32','8765','99'];\r\n    const n=arr.length;\r\nclass LinearParent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n             index:0,\r\n             start:0,\r\n             flag:false,\r\n             search:''\r\n        }\r\n    }\r\n    check=()=>{\r\n        this.setState({\r\n            flag:true\r\n        });\r\n    }\r\n    shouldComponentUpdate(nextProps,nextState){\r\n//        console.log(\"shouldComponentUpdate \"+this.state.flag);\r\n        if(this.state.flag)\r\n        return false;\r\n        return true;\r\n    }\r\n    linearSearch(){\r\n        if(this.state.index===n-1)\r\n        return;\r\n        if(this.state.flag===true)\r\n        return;\r\n//        console.log(`${this.state.flag} ${this.state.index}`);\r\n        setTimeout(() => {\r\n            this.setState(prev=>({\r\n                index:prev.index+1,\r\n                start:1\r\n            }))\r\n        }, 400);\r\n    }\r\n    reset(){\r\n//        console.log(\"reset\");\r\n        this.setState({\r\n            flag:false,\r\n            index: 0,\r\n            start:0,\r\n            search:''\r\n        },function(){\r\n            this.forceUpdate()\r\n        });\r\n    }\r\n\r\n    searchElementChange=(event)=>{\r\n        this.setState({\r\n            search:event.target.value\r\n        })\r\n    }\r\n    render() {\r\n//        console.log(\"render() \"+this.state.start);\r\n        if(this.state.start===1)\r\n        return (\r\n            <div>\r\n                <Linear ar={arr} index={this.state.index} srch={this.state.search} check={this.check}/>\r\n                <br/><br/>\r\n                <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                <br/>\r\n                <button className=\"button button4\" onClick={this.linearSearch()}>Run</button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"button button4\" type='submit' onClick={()=>this.reset()}>Reset</button>\r\n            </div>\r\n        )\r\n        else{\r\n            return (\r\n                <div>\r\n                    <Linear ar={arr} index={this.state.index} srch={this.state.search} check={this.check}/>\r\n                    <br/><br/>\r\n                    <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                    <br/>\r\n                    <button className=\"button button4\" onClick={()=>this.linearSearch()}>Run</button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <button className=\"button button4\" type='submit' onClick={()=>this.reset()}>Reset</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LinearParent","import React, { Component } from 'react'\r\nimport './myStyle.css';\r\n\r\nclass Binary extends Component {\r\n    render() {\r\n        let mid=Math.floor((this.props.l+this.props.r)/2);\r\n//        console.log(`${this.props.l} ${this.props.r}`);\r\n        const {l,r,ar,srch}=this.props;\r\n        const ui=ar.map((x,index)=>{\r\n            if(mid===index)\r\n            {\r\n                if(ar[mid]===srch)\r\n                    return(<div key={index} className=\"def green col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                    return(<div key={index} className=\"def red col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n            }\r\n            else\r\n            {\r\n                if(index===l)\r\n                return(<div key={index} className=\"def lblue col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else if(index===r)\r\n                return(<div key={index} className=\"def lblue col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                return(<div key={index} className=\"def q col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n            }\r\n        });\r\n        return (\r\n            <center>\r\n            <div className=\"mystl container\">\r\n                <div className=\"row\">\r\n                    {ui}\r\n                </div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Binary","import React, { Component } from 'react'\r\nimport Binary from './binary';\r\nimport './myStyle.css';\r\n\r\nconst ar=['-4','5','53','66','96','100','200','538','700','1000'];\r\nconst n=ar.length;\r\n\r\nclass BinaryParent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             l:0,\r\n             r:n-1,\r\n             start:0,\r\n             search:'100',\r\n             flag:false,\r\n        }\r\n    }\r\n    \r\n    check=()=>{\r\n        this.setState({\r\n            flag:true\r\n        })\r\n    }\r\n    shouldComponentUpdate(nextProps,nextState){\r\n            if(this.state.flag)\r\n            return false;\r\n            return true;\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({\r\n             l:0,\r\n             r:n-1,\r\n             start:0,\r\n             search:'',\r\n             flag:false\r\n        },function(){\r\n            this.forceUpdate()\r\n        })\r\n    }\r\n\r\n    binarySearch(){\r\n        if(this.state.l>this.state.r)\r\n        return;\r\n        if(this.state.flag===true)\r\n        return;\r\n        setTimeout(() => {\r\n            let mid=Math.floor((this.state.l+this.state.r)/2);\r\n            console.log(this.state.search+\" \"+ar[mid]);\r\n            if(parseInt(this.state.search)>parseInt(ar[mid]))\r\n            {\r\n                console.log(\"inside right \"+this.state.search+\" \"+ar[mid]);\r\n//                console.log(\"right\");\r\n                this.setState(prev=>({\r\n                    l:mid+1,\r\n                    start:1\r\n                }),function(){\r\n                    console.log(\"D \"+this.state.l);\r\n                })\r\n            }\r\n            else if(parseInt(this.state.search)<parseInt(ar[mid])){\r\n                console.log(\"left\");\r\n                this.setState(prev=>({\r\n                    r:mid-1,\r\n                    start:1\r\n                }),function(){\r\n                    console.log(\"S \"+this.state.r);\r\n                })\r\n            }\r\n            else\r\n            {\r\n                this.setState(prev=>({\r\n                    flag:true,\r\n                    start:0\r\n                }))\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    searchElementChange=(event)=>{\r\n        this.setState({\r\n            search:event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.start===1)\r\n        return (\r\n            <center>\r\n            <div>\r\n                <Binary l={this.state.l} r={this.state.r} ar={ar} srch={this.state.search} check={this.state.check} />\r\n                <br/><br/>\r\n                <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                <br/>\r\n                <button className=\"button button4\" onClick={this.binarySearch()}>Run</button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"button button4\" type='submit' onClick={()=>this.reset()}>Reset</button>\r\n            </div>\r\n            </center>\r\n        )\r\n        else\r\n        return (\r\n            <center>\r\n            <div>\r\n                <Binary l={this.state.l} r={this.state.r} ar={ar} srch={this.state.search} check={this.state.check}/>\r\n                <br/><br/>\r\n                <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                <br/>\r\n                <button className=\"button button4\" onClick={()=>this.binarySearch()}>Run</button>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"button button4\" type='submit' onClick={()=>this.reset()}>Reset</button>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BinaryParent\r\n","import React, { Component } from 'react'\r\nimport './Sort.css';\r\nvar bubblectr=0;\r\nvar sorted=false;\r\nvar width=50;\r\nvar reset=true;\r\nvar color1='rgb(0, 204, 0)';\r\nvar timeouts=[]\r\nvar skip=false\r\n//var ctr1=0;\r\nclass BubbleSort extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             ar:[],\r\n             n:20,\r\n             delay:250.0\r\n        }\r\n        this.resetArray=this.resetArray.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.resetArray();\r\n        reset=true;\r\n        sorted=false;\r\n        document.getElementById('skip').disabled=true;\r\n    }\r\n    componentDidUpdate(){\r\n        if(skip===true)\r\n        {\r\n            console.log(\"sa\");\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                const arr_bar=document.getElementsByClassName('array-bar');\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        }\r\n        else console.log(\"ASDDF\");\r\n    }\r\n    resetCSS(){\r\n        let arr=this.state.ar;\r\n            arr.sort(function(a, b){return a - b});\r\n            this.setState({\r\n                ar:arr\r\n            })\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            arr_bar[i].style.backgroundColor='blue';\r\n        }\r\n    }\r\n\r\n    resetArray(){\r\n        reset=true;\r\n        sorted=false;\r\n\r\n        let array = [];\r\n        for (let i = 0; i < this.state.n; i++) {\r\n            array.push(randomIntFromInterval(5, 500));\r\n        }\r\n        this.setState({\r\n            ar:array\r\n        });\r\n        if(bubblectr===1)\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            arr_bar[i].style.transform='translateX(0px)';\r\n            arr_bar[i].style.backgroundColor='blue';\r\n        }\r\n        bubblectr=1;\r\n    }\r\n    \r\n    buttons(x){\r\n        document.getElementById('reset').disabled=x;\r\n        document.getElementById('selectionsort').disabled=x;\r\n        document.getElementById('bubblesort').disabled=x;\r\n        document.getElementById('insertionsort').disabled=x;\r\n        document.getElementById('arr_size').disabled=x;\r\n        document.getElementById('delay').disabled=x;\r\n        document.getElementById('skip').disabled=!x;\r\n        if(x===true)\r\n        {\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                const arr_bar=document.getElementsByClassName('array-bar');\r\n                arr_bar[i].style.transform='translateX(0px)';\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        }\r\n        sorted= !x;\r\n    }\r\n\r\n    changeArrSize(){\r\n        var x=document.getElementById('arr_size');\r\n        bubblectr=0;\r\n        let wdth=.8*window.innerWidth;\r\n        let n1=Math.floor(x.value*3.6);\r\n//doubt about width formula\r\n        width=Math.floor(wdth/n1)-2;\r\n        this.setState({\r\n            n:n1\r\n        },function(){\r\n            this.resetArray();\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            if(typeof arr_bar==='undefined')\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        })\r\n    }\r\n\r\n    changeDelay(){\r\n        let x=document.getElementById('delay');\r\n        let val;\r\n        if(x.value>=1450)\r\n        val=.05;\r\n        else if(x.value>=1350)\r\n        val=.1;\r\n        else if(x.value>=1250)\r\n        val=.25;\r\n        else if(x.value>=1150)\r\n        val=.5;\r\n        else if(x.value>1000)\r\n        val=.75;\r\n        else val=1001-x.value;\r\n        this.setState({\r\n            delay:val\r\n        },function(){\r\n            if(sorted===true)\r\n            {\r\n                let arr=this.state.ar;\r\n                arr.sort(function(a, b){return a - b});\r\n                this.setState({\r\n                    ar:arr\r\n                })\r\n            }\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                const arr_bar=document.getElementsByClassName('array-bar');\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        })\r\n    }\r\n\r\n    skipAnimations(){\r\n        skip=true;\r\n        for(let i=0;i<timeouts.length;i++)\r\n        window.clearTimeout(timeouts[i]);\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            arr_bar[i].style.transform='translateX(0px)';\r\n        }\r\n        let arr=this.state.ar;\r\n        arr.sort(function(a, b){return a - b});\r\n        this.setState({\r\n            ar:arr\r\n        })\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            arr_bar[i].style.backgroundColor=color1;\r\n        }\r\n        this.buttons(false);\r\n        timeouts=[];\r\n        skip=false;\r\n    }\r\n\r\n    //Bubble Sort\r\n    BubbleSortAnimations(){\r\n        let animations=[];\r\n        let ar=this.state.ar;\r\n        for(let i=0;i<this.state.n-1;i++)\r\n        {\r\n            for(let j=0;j<this.state.n-1-i;j++)\r\n            {\r\n                if(ar[j]>ar[j+1])\r\n                {\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'red',\r\n                        swap:false\r\n                    })\r\n                    let t=ar[j];\r\n                    ar[j]=ar[j+1];\r\n                    ar[j+1]=t;\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:true\r\n                    })\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:false\r\n                    })\r\n                }\r\n                else{\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:false\r\n                    })\r\n                }\r\n            }\r\n            animations.push({\r\n                i:this.state.n-1-i,\r\n                j:-1,\r\n                color:'orange',\r\n                swap:false\r\n            })\r\n        }\r\n        animations.push({\r\n            i:0,\r\n            j:-1,\r\n            color:'orange',\r\n            swap:false\r\n        })\r\n        return animations;\r\n    }\r\n\r\n    bubbleSort()\r\n    {\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true);\r\n        const animations=this.BubbleSortAnimations();\r\n        let ptr=[];\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                    if(idx1>0 && arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                    arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq)\r\n                continue;\r\n            }\r\n            if(animations[i].swap===true)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                         ptr[idx1].ctr+=1;\r\n                         let y=ptr[idx1].ctr*(width+2);\r\n                         arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                         ptr[idx2].ctr-=1;\r\n                         y=ptr[idx2].ctr*(width+2);\r\n                         arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                         let tm=ptr[idx1];\r\n                         ptr[idx1]=ptr[idx2];\r\n                         ptr[idx2]=tm;\r\n                         arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                         arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                     }, i*this.state.delay);\r\n                     timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                if(animations[i].color==='green')\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        if(idx1>0&&arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                        arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n                else\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        if(idx1>0&&arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                        arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='red';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='red';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false);\r\n            reset=false;\r\n        }, (animations.length+1)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //Selection Sort\r\n    selectionSortAnimations(){\r\n        let animations=[]\r\n        let ar=this.state.ar\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            let min=1000000001,minpos;\r\n            for(let j=i+1;j<this.state.n;j++)\r\n            {\r\n                if(min>ar[j])\r\n                {\r\n                    min=ar[j];\r\n                    minpos=j;\r\n                    animations.push({\r\n                        i:i,\r\n                        j:j,\r\n                        color:'orange'\r\n                    })\r\n                }\r\n                else{\r\n                    animations.push({\r\n                        i:i,\r\n                        j:j,\r\n                        color:'palegreen'\r\n                    })\r\n                }\r\n            }\r\n            animations.push({\r\n                i:-1,\r\n                j:0,\r\n                color:'dummy'\r\n            })\r\n            if(ar[i]>ar[minpos])\r\n            {\r\n                let temp=ar[i];\r\n                ar[i]=ar[minpos];\r\n                ar[minpos]=temp;\r\n                animations.push({\r\n                    i:i,\r\n                    j:minpos,\r\n                    color:'swap'\r\n                })\r\n            }\r\n            animations.push({\r\n                i:i,\r\n                j:-1,\r\n                color:'green'\r\n            })\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    selectionSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true);\r\n        const animations=this.selectionSortAnimations();\r\n        let ptr=[];\r\n        let previdx=-1;\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx1===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    if(arr_bar[ptr[this.state.n-1].i].style.backgroundColor==='palegreen')\r\n                    arr_bar[ptr[this.state.n-1].i].style.backgroundColor='blue';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                }, i*this.state.delay);\r\n                previdx=-1;\r\n                timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                if(animations[i].color==='swap')\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        ptr[idx1].ctr+=idx2-idx1;\r\n                        let y=ptr[idx1].ctr*(width+2);\r\n                        arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                        ptr[idx2].ctr-=idx2-idx1;\r\n                        y=ptr[idx2].ctr*(width+2);\r\n                        arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                        let tm=ptr[idx1];\r\n                        ptr[idx1]=ptr[idx2];\r\n                        ptr[idx2]=tm;\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='blue';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n                else\r\n                {\r\n                    if(animations[i].color==='palegreen')\r\n                    {\r\n                        let qq=setTimeout(() => {\r\n                            arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                            arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                            if(arr_bar[ptr[idx2-1].i].style.backgroundColor==='palegreen')\r\n                            arr_bar[ptr[idx2-1].i].style.backgroundColor='blue';\r\n                        }, i*this.state.delay);\r\n                        timeouts.push(qq);\r\n                    }\r\n                    else\r\n                    {\r\n                        let qq=setTimeout(() => {\r\n                            arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                            if(previdx>=0&&arr_bar[previdx].style.backgroundColor==='orange')\r\n                            arr_bar[previdx].style.backgroundColor='blue';\r\n                            previdx=ptr[idx2].i;\r\n                            arr_bar[ptr[idx2].i].style.backgroundColor='orange';\r\n                            if((ptr[idx2-1].i !== ptr[idx1].i) && (arr_bar[ptr[idx2-1].i].style.backgroundColor==='palegreen' || arr_bar[ptr[idx2-1].i].style.backgroundColor==='orange'))\r\n                            arr_bar[ptr[idx2-1].i].style.backgroundColor='blue';\r\n                        }, i*this.state.delay);\r\n                        timeouts.push(qq);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false);\r\n            reset=false;\r\n        }, (animations.length+1)*this.state.delay)\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //Insertion Sort\r\n    insertionSortAnimations(){\r\n        let animations=[]\r\n        let ar=this.state.ar;\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            let j=i;\r\n            animations.push({\r\n                i:i,\r\n                j:-2,\r\n                color:'red'\r\n            })\r\n            while(j>0 && ar[j]<ar[j-1])\r\n            {\r\n                animations.push({\r\n                    i:j,\r\n                    j:j-1,\r\n                    color:'swap'\r\n                })\r\n                animations.push({\r\n                    i:-1,\r\n                    j:-1,\r\n                    color:'delay'\r\n                })\r\n                let temp=ar[j];\r\n                ar[j]=ar[j-1];\r\n                ar[j-1]=temp;\r\n                j--;\r\n            }\r\n            animations.push({\r\n                i:j,\r\n                j:-1,\r\n                color:'green'\r\n            })\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    insertionSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true);\r\n        const animations=this.insertionSortAnimations();\r\n        let ptr=[];\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx1===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    \r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(animations[i].color==='red')\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor='red';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    ptr[idx1].ctr+=idx2-idx1;\r\n                    let y=ptr[idx1].ctr*(width+2);\r\n                    arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                    ptr[idx2].ctr-=idx2-idx1;\r\n                    y=ptr[idx2].ctr*(width+2);\r\n                    arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                    let tm=ptr[idx1];\r\n                    ptr[idx1]=ptr[idx2];\r\n                    ptr[idx2]=tm;\r\n                    arr_bar[ptr[idx2].i].style.backgroundColor='red';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false);\r\n            reset=false;\r\n        }, (animations.length+1)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    render() {\r\n        let i;\r\n        for(i=1000;i>=0;i--)\r\n        {\r\n            let wdth=.8*window.innerWidth;\r\n            let n1=Math.floor(i*3.6);\r\n            let width1=Math.floor(wdth/n1)-2;\r\n            if(width1>0)\r\n            break;\r\n        }\r\n        let maxn=i;\r\n        let str;\r\n        let ctr1=0;\r\n         if(reset===false)\r\n        str=this.state.ar.map((x) => (\r\n            <div className=\"array-bar\" key={ctr1++ + 'e'} style={{backgroundColor: 'blue',height: `${x}px`, width:`${width}px`}}> </div>\r\n            ))\r\n        else\r\n        str=this.state.ar.map((x) => (\r\n            <div className=\"array-bar\" key={ctr1++ + 'w'} style={{backgroundColor: 'blue',height: `${x}px`, width:`${width}px`, transform:'translateX(0px)', transition:`transform ${this.state.delay}ms linear`}}> </div>\r\n            ))\r\n        return (\r\n            <div>\r\n            <h1 style={{color:'black'}}>Sorting Visualizer</h1>\r\n            <span>Data size</span>\r\n            <input type=\"range\"  min={2} max={maxn} defaultValue={4} onChange={()=>this.changeArrSize()} className=\"slider\" id=\"arr_size\"/>\r\n            <button onClick={()=>this.resetArray()} id='reset'>Reset</button>\r\n            <button onClick={()=>this.bubbleSort()} id='bubblesort'>Bubble Sort</button>\r\n            <button onClick={()=>this.selectionSort()} id='selectionsort'>Selection Sort</button>\r\n            <button onClick={()=>this.insertionSort()} id='insertionsort'>Insertion Sort</button>\r\n            <button onClick={()=>this.skipAnimations()} id='skip'>Skip</button>\r\n            <span>Speed</span>\r\n            <input type=\"range\"  min={1} max={1505} defaultValue={751} onChange={()=>this.changeDelay()} className=\"slider\" id=\"delay\"/>\r\n            <div className=\"array-container\">\r\n            { str }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\nexport default BubbleSort\r\n","import React, { Component } from 'react'\r\nimport LinearParent from './linear_parent';\r\nimport BinaryParent from './Binary_parent';\r\nimport BubbleSort from './BubbleSort';\r\nclass Search extends Component {\r\n    render() {\r\n        return(\r\n            <BubbleSort />\r\n        )\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        <h1>Linear Search Simulation</h1>\r\n                        <br/>\r\n                        <LinearParent/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        <h1>Binary Search Simulation</h1>\r\n                        <br/>\r\n                        <BinaryParent/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n//import StyleSheet from './components/styleSheet';\r\nimport Search from './components/Search';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Search/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}